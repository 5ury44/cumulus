// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: orchestrator.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// JobState represents the lifecycle states of a job
type JobState int32

const (
	// Job is being scheduled on a worker
	JobState_SCHEDULING JobState = 0
	// Creating Chronos GPU partition on worker
	JobState_CREATING_PARTITION JobState = 1
	// Job container is running
	JobState_RUNNING JobState = 2
	// Job completed successfully
	JobState_COMPLETED JobState = 3
	// Job failed with an error
	JobState_FAILED JobState = 4
	// Job was cancelled by user
	JobState_CANCELLED JobState = 5
)

// Enum value maps for JobState.
var (
	JobState_name = map[int32]string{
		0: "SCHEDULING",
		1: "CREATING_PARTITION",
		2: "RUNNING",
		3: "COMPLETED",
		4: "FAILED",
		5: "CANCELLED",
	}
	JobState_value = map[string]int32{
		"SCHEDULING":         0,
		"CREATING_PARTITION": 1,
		"RUNNING":            2,
		"COMPLETED":          3,
		"FAILED":             4,
		"CANCELLED":          5,
	}
)

func (x JobState) Enum() *JobState {
	p := new(JobState)
	*p = x
	return p
}

func (x JobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobState) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_proto_enumTypes[0].Descriptor()
}

func (JobState) Type() protoreflect.EnumType {
	return &file_orchestrator_proto_enumTypes[0]
}

func (x JobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobState.Descriptor instead.
func (JobState) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{0}
}

// JobSubmission contains all information needed to execute a job
type JobSubmission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ZIP file containing user code, requirements.txt, and job config
	CodePackage []byte `protobuf:"bytes,1,opt,name=code_package,json=codePackage,proto3" json:"code_package,omitempty"`
	// Python package requirements (e.g., ["torch==2.0.0", "numpy"])
	Requirements []string `protobuf:"bytes,2,rep,name=requirements,proto3" json:"requirements,omitempty"`
	// GPU memory allocation
	// Fractional: 0.1-0.9 (time-sliced GPU sharing)
	// Whole GPUs: 1, 2, 3, 4, 5, 6, 7, 8
	GpuMemory float32 `protobuf:"fixed32,3,opt,name=gpu_memory,json=gpuMemory,proto3" json:"gpu_memory,omitempty"`
	// Maximum execution duration in seconds (60-86400)
	Duration      int32 `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobSubmission) Reset() {
	*x = JobSubmission{}
	mi := &file_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobSubmission) ProtoMessage() {}

func (x *JobSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobSubmission.ProtoReflect.Descriptor instead.
func (*JobSubmission) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *JobSubmission) GetCodePackage() []byte {
	if x != nil {
		return x.CodePackage
	}
	return nil
}

func (x *JobSubmission) GetRequirements() []string {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *JobSubmission) GetGpuMemory() float32 {
	if x != nil {
		return x.GpuMemory
	}
	return 0
}

func (x *JobSubmission) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// JobEvent represents a state change or progress update for a job
type JobEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique job identifier
	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Current job state
	State JobState `protobuf:"varint,2,opt,name=state,proto3,enum=cumulus.orchestrator.JobState" json:"state,omitempty"`
	// Human-readable message about the current state
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Final result (JSON-encoded) - only present when state=COMPLETED
	Result []byte `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	// Progress indicator (0.0-1.0) - optional
	Progress float32 `protobuf:"fixed32,5,opt,name=progress,proto3" json:"progress,omitempty"`
	// Timestamp of this event
	Timestamp     int64 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobEvent) Reset() {
	*x = JobEvent{}
	mi := &file_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobEvent) ProtoMessage() {}

func (x *JobEvent) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobEvent.ProtoReflect.Descriptor instead.
func (*JobEvent) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *JobEvent) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobEvent) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_SCHEDULING
}

func (x *JobEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JobEvent) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *JobEvent) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *JobEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// JobStatusRequest requests the current status of a job
type JobStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobStatusRequest) Reset() {
	*x = JobStatusRequest{}
	mi := &file_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusRequest) ProtoMessage() {}

func (x *JobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusRequest.ProtoReflect.Descriptor instead.
func (*JobStatusRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *JobStatusRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// JobStatus contains detailed information about a job
type JobStatus struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	JobId   string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	State   JobState               `protobuf:"varint,2,opt,name=state,proto3,enum=cumulus.orchestrator.JobState" json:"state,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Worker node ID where job is/was running
	WorkerId string `protobuf:"bytes,4,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	// Chronos partition ID
	PartitionId string `protobuf:"bytes,5,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	// Docker service/container ID
	ContainerId string `protobuf:"bytes,6,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Timestamps
	CreatedAt   int64 `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt   int64 `protobuf:"varint,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt int64 `protobuf:"varint,9,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Error message if state=FAILED
	Error         string `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	mi := &file_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *JobStatus) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobStatus) GetState() JobState {
	if x != nil {
		return x.State
	}
	return JobState_SCHEDULING
}

func (x *JobStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JobStatus) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

func (x *JobStatus) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *JobStatus) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *JobStatus) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *JobStatus) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *JobStatus) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

func (x *JobStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// JobCancelRequest requests cancellation of a job
type JobCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobCancelRequest) Reset() {
	*x = JobCancelRequest{}
	mi := &file_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCancelRequest) ProtoMessage() {}

func (x *JobCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCancelRequest.ProtoReflect.Descriptor instead.
func (*JobCancelRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *JobCancelRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// CancelJobResponse confirms job cancellation
type CancelJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cancelled     bool                   `protobuf:"varint,1,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobResponse) Reset() {
	*x = CancelJobResponse{}
	mi := &file_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobResponse) ProtoMessage() {}

func (x *CancelJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobResponse.ProtoReflect.Descriptor instead.
func (*CancelJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *CancelJobResponse) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *CancelJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListWorkersRequest requests list of available workers
type ListWorkersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional: filter by worker status
	StatusFilter  string `protobuf:"bytes,1,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWorkersRequest) Reset() {
	*x = ListWorkersRequest{}
	mi := &file_orchestrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWorkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkersRequest) ProtoMessage() {}

func (x *ListWorkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkersRequest.ProtoReflect.Descriptor instead.
func (*ListWorkersRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *ListWorkersRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

// WorkerList contains information about all workers
type WorkerList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Workers       []*WorkerInfo          `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerList) Reset() {
	*x = WorkerList{}
	mi := &file_orchestrator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerList) ProtoMessage() {}

func (x *WorkerList) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerList.ProtoReflect.Descriptor instead.
func (*WorkerList) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{7}
}

func (x *WorkerList) GetWorkers() []*WorkerInfo {
	if x != nil {
		return x.Workers
	}
	return nil
}

// WorkerInfo describes a GPU worker node
type WorkerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Swarm node ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Hostname
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// IP address for SSH access
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Worker status (ready, down, draining)
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	// GPU devices on this worker
	GpuDevices    []*GPUDevice `protobuf:"bytes,5,rep,name=gpu_devices,json=gpuDevices,proto3" json:"gpu_devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerInfo) Reset() {
	*x = WorkerInfo{}
	mi := &file_orchestrator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerInfo) ProtoMessage() {}

func (x *WorkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerInfo.ProtoReflect.Descriptor instead.
func (*WorkerInfo) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{8}
}

func (x *WorkerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkerInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *WorkerInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WorkerInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *WorkerInfo) GetGpuDevices() []*GPUDevice {
	if x != nil {
		return x.GpuDevices
	}
	return nil
}

// GPUDevice describes a single GPU
type GPUDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device index (0, 1, 2, ...)
	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// GPU name (e.g., "NVIDIA A100")
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Total memory in MB
	MemoryMb int32 `protobuf:"varint,3,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	// Total capacity (always 1.0 per physical GPU)
	TotalCapacity float32 `protobuf:"fixed32,4,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	// Currently allocated amount (sum of active partitions)
	AllocatedAmount float32 `protobuf:"fixed32,5,opt,name=allocated_amount,json=allocatedAmount,proto3" json:"allocated_amount,omitempty"`
	// Active partitions on this device
	ActivePartitions []*PartitionInfo `protobuf:"bytes,6,rep,name=active_partitions,json=activePartitions,proto3" json:"active_partitions,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GPUDevice) Reset() {
	*x = GPUDevice{}
	mi := &file_orchestrator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPUDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUDevice) ProtoMessage() {}

func (x *GPUDevice) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUDevice.ProtoReflect.Descriptor instead.
func (*GPUDevice) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{9}
}

func (x *GPUDevice) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GPUDevice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GPUDevice) GetMemoryMb() int32 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *GPUDevice) GetTotalCapacity() float32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *GPUDevice) GetAllocatedAmount() float32 {
	if x != nil {
		return x.AllocatedAmount
	}
	return 0
}

func (x *GPUDevice) GetActivePartitions() []*PartitionInfo {
	if x != nil {
		return x.ActivePartitions
	}
	return nil
}

// PartitionInfo describes an active Chronos partition
type PartitionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartitionId   string                 `protobuf:"bytes,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Amount        float32                `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionInfo) Reset() {
	*x = PartitionInfo{}
	mi := &file_orchestrator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionInfo) ProtoMessage() {}

func (x *PartitionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionInfo.ProtoReflect.Descriptor instead.
func (*PartitionInfo) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{10}
}

func (x *PartitionInfo) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *PartitionInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *PartitionInfo) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PartitionInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PartitionInfo) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

// HealthCheckRequest requests orchestrator health status
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_orchestrator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{11}
}

// HealthStatus reports orchestrator health
type HealthStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Overall status (healthy, degraded, unhealthy)
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Orchestrator version
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Number of active jobs
	ActiveJobs int32 `protobuf:"varint,3,opt,name=active_jobs,json=activeJobs,proto3" json:"active_jobs,omitempty"`
	// Number of available workers
	AvailableWorkers int32 `protobuf:"varint,4,opt,name=available_workers,json=availableWorkers,proto3" json:"available_workers,omitempty"`
	// Swarm connection status
	SwarmConnected bool `protobuf:"varint,5,opt,name=swarm_connected,json=swarmConnected,proto3" json:"swarm_connected,omitempty"`
	// Uptime in seconds
	UptimeSeconds int64 `protobuf:"varint,6,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	mi := &file_orchestrator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{12}
}

func (x *HealthStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthStatus) GetActiveJobs() int32 {
	if x != nil {
		return x.ActiveJobs
	}
	return 0
}

func (x *HealthStatus) GetAvailableWorkers() int32 {
	if x != nil {
		return x.AvailableWorkers
	}
	return 0
}

func (x *HealthStatus) GetSwarmConnected() bool {
	if x != nil {
		return x.SwarmConnected
	}
	return false
}

func (x *HealthStatus) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

var File_orchestrator_proto protoreflect.FileDescriptor

const file_orchestrator_proto_rawDesc = "" +
	"\n" +
	"\x12orchestrator.proto\x12\x14cumulus.orchestrator\"\x91\x01\n" +
	"\rJobSubmission\x12!\n" +
	"\fcode_package\x18\x01 \x01(\fR\vcodePackage\x12\"\n" +
	"\frequirements\x18\x02 \x03(\tR\frequirements\x12\x1d\n" +
	"\n" +
	"gpu_memory\x18\x03 \x01(\x02R\tgpuMemory\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x05R\bduration\"\xc3\x01\n" +
	"\bJobEvent\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x124\n" +
	"\x05state\x18\x02 \x01(\x0e2\x1e.cumulus.orchestrator.JobStateR\x05state\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x16\n" +
	"\x06result\x18\x04 \x01(\fR\x06result\x12\x1a\n" +
	"\bprogress\x18\x05 \x01(\x02R\bprogress\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\")\n" +
	"\x10JobStatusRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"\xcc\x02\n" +
	"\tJobStatus\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x124\n" +
	"\x05state\x18\x02 \x01(\x0e2\x1e.cumulus.orchestrator.JobStateR\x05state\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1b\n" +
	"\tworker_id\x18\x04 \x01(\tR\bworkerId\x12!\n" +
	"\fpartition_id\x18\x05 \x01(\tR\vpartitionId\x12!\n" +
	"\fcontainer_id\x18\x06 \x01(\tR\vcontainerId\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\b \x01(\x03R\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\t \x01(\x03R\vcompletedAt\x12\x14\n" +
	"\x05error\x18\n" +
	" \x01(\tR\x05error\")\n" +
	"\x10JobCancelRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"K\n" +
	"\x11CancelJobResponse\x12\x1c\n" +
	"\tcancelled\x18\x01 \x01(\bR\tcancelled\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"9\n" +
	"\x12ListWorkersRequest\x12#\n" +
	"\rstatus_filter\x18\x01 \x01(\tR\fstatusFilter\"H\n" +
	"\n" +
	"WorkerList\x12:\n" +
	"\aworkers\x18\x01 \x03(\v2 .cumulus.orchestrator.WorkerInfoR\aworkers\"\xac\x01\n" +
	"\n" +
	"WorkerInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12@\n" +
	"\vgpu_devices\x18\x05 \x03(\v2\x1f.cumulus.orchestrator.GPUDeviceR\n" +
	"gpuDevices\"\xf6\x01\n" +
	"\tGPUDevice\x12\x14\n" +
	"\x05index\x18\x01 \x01(\x05R\x05index\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tmemory_mb\x18\x03 \x01(\x05R\bmemoryMb\x12%\n" +
	"\x0etotal_capacity\x18\x04 \x01(\x02R\rtotalCapacity\x12)\n" +
	"\x10allocated_amount\x18\x05 \x01(\x02R\x0fallocatedAmount\x12P\n" +
	"\x11active_partitions\x18\x06 \x03(\v2#.cumulus.orchestrator.PartitionInfoR\x10activePartitions\"\x9f\x01\n" +
	"\rPartitionInfo\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\tR\vpartitionId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x02R\x06amount\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\"\x14\n" +
	"\x12HealthCheckRequest\"\xde\x01\n" +
	"\fHealthStatus\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1f\n" +
	"\vactive_jobs\x18\x03 \x01(\x05R\n" +
	"activeJobs\x12+\n" +
	"\x11available_workers\x18\x04 \x01(\x05R\x10availableWorkers\x12'\n" +
	"\x0fswarm_connected\x18\x05 \x01(\bR\x0eswarmConnected\x12%\n" +
	"\x0euptime_seconds\x18\x06 \x01(\x03R\ruptimeSeconds*i\n" +
	"\bJobState\x12\x0e\n" +
	"\n" +
	"SCHEDULING\x10\x00\x12\x16\n" +
	"\x12CREATING_PARTITION\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\x12\r\n" +
	"\tCOMPLETED\x10\x03\x12\n" +
	"\n" +
	"\x06FAILED\x10\x04\x12\r\n" +
	"\tCANCELLED\x10\x052\xd8\x03\n" +
	"\x13OrchestratorService\x12R\n" +
	"\tSubmitJob\x12#.cumulus.orchestrator.JobSubmission\x1a\x1e.cumulus.orchestrator.JobEvent0\x01\x12W\n" +
	"\fGetJobStatus\x12&.cumulus.orchestrator.JobStatusRequest\x1a\x1f.cumulus.orchestrator.JobStatus\x12\\\n" +
	"\tCancelJob\x12&.cumulus.orchestrator.JobCancelRequest\x1a'.cumulus.orchestrator.CancelJobResponse\x12Y\n" +
	"\vListWorkers\x12(.cumulus.orchestrator.ListWorkersRequest\x1a .cumulus.orchestrator.WorkerList\x12[\n" +
	"\vHealthCheck\x12(.cumulus.orchestrator.HealthCheckRequest\x1a\".cumulus.orchestrator.HealthStatusB4Z2github.com/cumulus/orchestrator/proto;orchestratorb\x06proto3"

var (
	file_orchestrator_proto_rawDescOnce sync.Once
	file_orchestrator_proto_rawDescData []byte
)

func file_orchestrator_proto_rawDescGZIP() []byte {
	file_orchestrator_proto_rawDescOnce.Do(func() {
		file_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)))
	})
	return file_orchestrator_proto_rawDescData
}

var file_orchestrator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_orchestrator_proto_goTypes = []any{
	(JobState)(0),              // 0: cumulus.orchestrator.JobState
	(*JobSubmission)(nil),      // 1: cumulus.orchestrator.JobSubmission
	(*JobEvent)(nil),           // 2: cumulus.orchestrator.JobEvent
	(*JobStatusRequest)(nil),   // 3: cumulus.orchestrator.JobStatusRequest
	(*JobStatus)(nil),          // 4: cumulus.orchestrator.JobStatus
	(*JobCancelRequest)(nil),   // 5: cumulus.orchestrator.JobCancelRequest
	(*CancelJobResponse)(nil),  // 6: cumulus.orchestrator.CancelJobResponse
	(*ListWorkersRequest)(nil), // 7: cumulus.orchestrator.ListWorkersRequest
	(*WorkerList)(nil),         // 8: cumulus.orchestrator.WorkerList
	(*WorkerInfo)(nil),         // 9: cumulus.orchestrator.WorkerInfo
	(*GPUDevice)(nil),          // 10: cumulus.orchestrator.GPUDevice
	(*PartitionInfo)(nil),      // 11: cumulus.orchestrator.PartitionInfo
	(*HealthCheckRequest)(nil), // 12: cumulus.orchestrator.HealthCheckRequest
	(*HealthStatus)(nil),       // 13: cumulus.orchestrator.HealthStatus
}
var file_orchestrator_proto_depIdxs = []int32{
	0,  // 0: cumulus.orchestrator.JobEvent.state:type_name -> cumulus.orchestrator.JobState
	0,  // 1: cumulus.orchestrator.JobStatus.state:type_name -> cumulus.orchestrator.JobState
	9,  // 2: cumulus.orchestrator.WorkerList.workers:type_name -> cumulus.orchestrator.WorkerInfo
	10, // 3: cumulus.orchestrator.WorkerInfo.gpu_devices:type_name -> cumulus.orchestrator.GPUDevice
	11, // 4: cumulus.orchestrator.GPUDevice.active_partitions:type_name -> cumulus.orchestrator.PartitionInfo
	1,  // 5: cumulus.orchestrator.OrchestratorService.SubmitJob:input_type -> cumulus.orchestrator.JobSubmission
	3,  // 6: cumulus.orchestrator.OrchestratorService.GetJobStatus:input_type -> cumulus.orchestrator.JobStatusRequest
	5,  // 7: cumulus.orchestrator.OrchestratorService.CancelJob:input_type -> cumulus.orchestrator.JobCancelRequest
	7,  // 8: cumulus.orchestrator.OrchestratorService.ListWorkers:input_type -> cumulus.orchestrator.ListWorkersRequest
	12, // 9: cumulus.orchestrator.OrchestratorService.HealthCheck:input_type -> cumulus.orchestrator.HealthCheckRequest
	2,  // 10: cumulus.orchestrator.OrchestratorService.SubmitJob:output_type -> cumulus.orchestrator.JobEvent
	4,  // 11: cumulus.orchestrator.OrchestratorService.GetJobStatus:output_type -> cumulus.orchestrator.JobStatus
	6,  // 12: cumulus.orchestrator.OrchestratorService.CancelJob:output_type -> cumulus.orchestrator.CancelJobResponse
	8,  // 13: cumulus.orchestrator.OrchestratorService.ListWorkers:output_type -> cumulus.orchestrator.WorkerList
	13, // 14: cumulus.orchestrator.OrchestratorService.HealthCheck:output_type -> cumulus.orchestrator.HealthStatus
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_orchestrator_proto_init() }
func file_orchestrator_proto_init() {
	if File_orchestrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orchestrator_proto_goTypes,
		DependencyIndexes: file_orchestrator_proto_depIdxs,
		EnumInfos:         file_orchestrator_proto_enumTypes,
		MessageInfos:      file_orchestrator_proto_msgTypes,
	}.Build()
	File_orchestrator_proto = out.File
	file_orchestrator_proto_goTypes = nil
	file_orchestrator_proto_depIdxs = nil
}
